#PYTHON 3.7

import pandas as pd
import numpy as np
import os
import glob


#F(PROCESS) : UPRAVA DAT - VYPOUSIM ZBYTECNE SLOUPCE (processed), KLICOVE SLOUPCE PREJMENOVAVAM (processed2), PREVRACIM HODNOTY accuracy ABY 1 ZNAMENALA
#SPRAVNOU ODPOVED

def process(participant):
    ToDrop = ['instructions', 'frameRate', 'expName', 'date']
    processed = participant.drop(ToDrop, axis=1)
    processed2 = processed.rename(columns = {'blocks.thisN' : 'block', 
                                  'trials.thisN' : 'trials', 
                                  'requiredResponse.rt' : 'rt',
                                  'feedbackResponse.corr' : 'accuracy'})
    processed3 = processed2.assign(accuracy = abs(processed2['accuracy'] - 1))
    processed4 = processed3.assign(block = (processed3['block'] + 1))
    return processed4

#F(RECTIFY : pořadí obliceju belochu / cernochu bylo u ucastniku s lichym a sudym kodem opacne, tahle funkce to vyrovna)
def rectify(i):
    if block_order == 1:
            return i
    elif block_order == 2:
            return i * (-1)
    else:
            return 'Error'


    
    

#IMPORT DAT  
files1 = []
directory1 = os.path.join("C:\\", "Users\\admin\Documents\IAT\IAT1/")
extension1 = 'csv'
os.chdir(directory1)
files1 = glob.glob('*.{}'.format(extension1))

files2 = []
directory2 = os.path.join("C:\\", "Users\\admin\Documents\IAT\IAT2/")
extension = 'csv'
os.chdir(directory2)
files2 = glob.glob('*.{}'.format(extension))



#VYPOCET D1
for file in files2:
    fname = pd.read_csv(directory2 + file)
    id = fname.loc[5, 'participant']
    pohl = fname.loc[5, 'gender']
    gender = pohl.upper()
    age = fname.loc[5, 'age']
    participant1 = process(fname)
    #definuju kriticke bloky
    block3 = participant1.loc[participant1['block'] == 3]
    block4 = participant1.loc[participant1['block'] == 4]   
    block6 = participant1.loc[participant1['block'] == 6]
      
    block7 = participant1.loc[participant1['block'] == 7]
    block3and6 = pd.concat([block3, block6])
      
    block4and7 = pd.concat([block4, block7])
    RT_block3_m = np.mean(block3['rt'])
    RT_block6_m = np.mean(block6['rt'])
    RT_block3and6_SD = np.std(block3and6['rt'])
    RT_block4_m = np.mean(block4['rt'])
    RT_block7_m = np.mean(block7['rt'])
      
    RT_block4and7_SD = np.std(block4and7['rt']) 
    
    difference_a = RT_block6_m - RT_block3_m
    
    IAT_D1a = difference_a / RT_block3and6_SD
    difference_b = RT_block7_m - RT_block4_m
    IAT_D1b = difference_b / RT_block4and7_SD
    IAT_D1 = (IAT_D1a + IAT_D1b) / 2
      
    block_order = (participant1.loc[5, 'participant'] - 1) % 2 + 1
    
    IAT_D1a_rectified = rectify(IAT_D1a)
    IAT_D1b_rectified = rectify(IAT_D1b)
    IAT_D1_rectified = rectify(IAT_D1)
    IAT_D1a_rectified = rectify(IAT_D1a)
    IAT_D1b_rectified = rectify(IAT_D1b)
    IAT_D1_rectified = rectify(IAT_D1)
    
    block3accuracy = block3['accuracy'].sum()
    block4accuracy = block4['accuracy'].sum()
    block6accuracy = block6['accuracy'].sum()
    block7accuracy = block7['accuracy'].sum()
    
    critical_blocks_accuracy = block3accuracy + block4accuracy + block6accuracy + block7accuracy
    accuracy = critical_blocks_accuracy / 120
    swag = [id, gender, age, IAT_D1_rectified, IAT_D1a_rectified, IAT_D1b_rectified, accuracy]
    print(swag)
    
IAT1_10 = [10, 'F', 18, 0.06822843358664321, 0.6390385122813467, -0.5025816451080602, 0.9916666666666667]
IAT1_11 = [11, 'M', 23, 0.6278330662081236, 0.8163138646131828, 0.43935226780306447, 0.95]
IAT1_12 = [12, 'M', 20, 0.7549018310667969, 1.3803237226919483, 0.1294799394416455, 0.9583333333333334]
IAT1_13 = [13, 'M', 20, 0.08546290364001156, 0.3984718189337513, -0.22754601165372815, 0.975]
IAT1_14 = [14, 'M', 20, 1.0472430962229544, 1.089039585193114, 1.0054466072527946, 0.9916666666666667]
IAT1_15 = [15, 'M', 22, 0.5807050632964951, 0.4350220413105633, 0.7263880852824268, 0.9166666666666666]
IAT1_16 = [16, 'F', 21, 0.754006290868023, 0.5968919192286375, 0.9111206625074083, 0.9833333333333333]
IAT1_17 = [17, 'F', 21, 0.7599204098290042, 0.6611646124753376, 0.8586762071826707, 0.9666666666666667]
IAT1_18 = [18, 'F', 21, 0.07305542128729633, 0.22843340811775298, -0.0823225655431603, 0.8833333333333333]
IAT1_19 = [19, 'M', 20, 0.6026404127673173, 0.43073542673813237, 0.7745453987965023, 0.95]
IAT1_20 = [20, 'F', 21, 0.2826342004849546, 0.6147094097547954, -0.04944100878488617, 0.9916666666666667]
IAT1_21 = [21, 'M', 21, 0.6244502924354037, 0.1588712167345804, 1.090029368136227, 0.9833333333333333]
IAT1_22 = [22, 'M', 21, 'nan', 0.8060047212316606, 'nan', 0.625]
IAT1_23 = [23, 'M', 20, 0.17646020549331254, 0.39405366517343987, -0.041133254186814815, 0.9833333333333333]
IAT1_24 = [24, 'M', 22, 0.7157036597628317, 0.6722157242280234, 0.7591915952976398, 0.975]
IAT1_25 = [25, 'F', 26, 0.09380065289939739, 0.097019292188369, 0.09058201361042578, 0.9]
IAT1_27 = [27, 'F', 28, 0.6762233484703989, 0.3558542596236157, 0.9965924373171821, 0.9333333333333333]
IAT1_29 = [29, 'F', 19, 0.5105942553653569, 0.5519309346807854, 0.46925757604992824, 0.975]
IAT1_2  = [2, 'F', 21, 0.45813766841455833, 0.32221019067917067, 0.594065146149946, 0.95]
IAT1_30 = [30, 'F', 20, -0.019544528721387244, -0.02351932687459028, -0.015569730568184207, 0.9916666666666667]
IAT1_4  = [4, 'F', 22, 0.5918052673588308, 0.6573932031740377, 0.5262173315436239, 0.9666666666666667]
IAT1_5  = [5, 'F', 24, 0.5891694192306793, 0.6748112525285949, 0.5035275859327638, 0.9416666666666667]
IAT1_6  = [6, 'M', 25, 1.037618364020576, 1.1050596840963918, 0.9701770439447603, 0.9166666666666666]
IAT1_7  = [7, 'F', 20, 0.6319371906179075, 0.0021430930762619377, 1.261731288159553, 0.9416666666666667]
IAT1_8  = [8, 'F', 21, 0.9512924043315862, 0.8535492537235347, 1.0490355549396377, 0.8333333333333334]
IAT1_9  = [9, 'M', 21, 0.4352378837537858, 0.15835460132632986, 0.7121211661812418, 0.8916666666666667]


IAT2_10 = [10, 'F', 18, 0.3699748934352001, 0.5702886286477105, 0.1696611582226898, 0.9416666666666667]
IAT2_11 = [11, 'M', 23, 0.8513213361544381, 0.9388481099370638, 0.7637945623718124, 0.9083333333333333]
IAT2_12 = [12, 'M', 20, -0.07928209190420905, -0.1266659896498938, -0.03189819415852429, 0.9916666666666667]
IAT2_13 = [13, 'M', 20, 0.9044970433338425, 0.9199485370537275, 0.8890455496139575, 0.9583333333333334]
IAT2_14 = [14, 'M', 20, 1.160562695172694, 1.332831711954663, 0.9882936783907247, 0.9833333333333333]
IAT2_15 = [15, 'M', 22, 0.36316897891470795, 0.36138506315018387, 0.36495289467923203, 0.95]
IAT2_16 = [16, 'F', 21, 0.5129572809209391, 0.5995047167788875, 0.42640984506299057, 0.9166666666666666]
IAT2_17 = [17, 'F', 21, 0.6246157981276175, 0.6272494501397462, 0.6219821461154889, 0.9666666666666667]
IAT2_18 = [18, 'F', 21, -0.10610704684040895, -0.37525722625680996, 0.16304313257599207, 0.95]
IAT2_19 = [19, 'M', 20, 0.14477371120212798, 0.3880190067247126, -0.09847158432045666, 0.975]
IAT2_20 = [20, 'F', 21, 0.19614066671672362, -0.17236142468999088, 0.5646427581234381, 1.0]
IAT2_21 = [21, 'M', 21, 0.3957821225412744, 0.21150298429484302, 0.5800612607877057, 1.0]
IAT2_22 = [22, 'M', 21, 0.4907619715044709, 0.21605047543769387, 0.7654734675712479, 0.8833333333333333]
IAT2_23 = [23, 'M', 20, 0.3344523546655736, 0.18309215398207404, 0.4858125553490732, 0.8833333333333333]
IAT2_24 = [24, 'M', 22, 0.37387398713134934, 0.4609118458020899, 0.28683612846060874, 0.9416666666666667]
IAT2_25 = [25, 'F', 26, 0.39387827287398985, 0.08907332155105534, 0.6986832241969244, 0.9166666666666666]
IAT2_27 = [27, 'F', 28, 0.7216955130365401, 0.8570977164809611, 0.586293309592119, 0.9083333333333333]
IAT2_29 = [29, 'F', 19, 0.3179891706555745, 0.4206837214219783, 0.21529461988917079, 0.975]
IAT2_2  = [2, 'F', 21, 0.1245778002476676, -0.08268958537070442, 0.3318451858660396, 0.9416666666666667]
IAT2_30 = [30, 'F', 20, 0.1435023145597277, 0.055199955054717594, 0.23180467406473781, 0.9833333333333333]
IAT2_4  = [4, 'F', 22, -0.17032034509546778, -0.198548810311465, -0.14209187987947056, 0.95]
IAT2_5  = [5, 'F', 24, 0.7416143267270994, 0.7658954092771081, 0.7173332441770905, 0.9333333333333333]
IAT2_6  = [6, 'M', 25, 0.6022353563607332, 0.3763060526088384, 0.8281646601126279, 0.925]
IAT2_7  = [7, 'F', 20, 1.0933057476285457, 1.1275606764587758, 1.0590508187983156, 0.9583333333333334]
IAT2_8  = [8, 'F', 21, 0.8899387392807918, 0.9512609579787834, 0.8286165205828002, 0.875]
IAT2_9  = [9, 'M', 21, 0.35525135215571474, 0.4991386871660106, 0.2113640171454189, 0.8916666666666667]





headers1 = ['id', 'gender', 'age', 'IAT_D1_rectified', 'IAT_D1a_rectified', 'IAT_D1b_rectified', 'accuracy1']
headers2 = ['id', 'gender', 'age', 'IAT_D2_rectified', 'IAT_D2a_rectified', 'IAT_D2b_rectified', 'accuracy2']
headers3 = ['Datum', 'Participant', 'Condition', 'Knows_IAT']




data1 = pd.DataFrame(zip(IAT1_2, IAT1_4, IAT1_5, IAT1_6, IAT1_7, IAT1_8, IAT1_9, IAT1_10, IAT1_11, IAT1_12, IAT1_13, IAT1_14, IAT1_15, IAT1_16, IAT1_17, IAT1_18, IAT1_19, IAT1_20, IAT1_21, IAT1_22, IAT1_23, IAT1_24, IAT1_25, IAT1_27, IAT1_29, IAT1_30))
data1 = data1.transpose()
data1.columns = headers1
data1.set_index('id', inplace = True)
print(data1)

data2 = pd.DataFrame(zip(IAT2_2, IAT2_4, IAT2_5, IAT2_6, IAT2_7, IAT2_8, IAT2_9, IAT2_10, IAT2_11, IAT2_12, IAT2_13, IAT2_14, IAT2_15, IAT2_16, IAT2_17, IAT2_18, IAT2_19, IAT2_20, IAT2_21, IAT2_22, IAT2_23, IAT2_24, IAT2_25, IAT2_27, IAT2_29, IAT2_30))
data2 = data2.transpose()
data2.columns = headers2
data2.set_index('id', inplace = True)
print(data2)

data = pd.concat([data1, data2], axis=1, join = 'outer', sort = False)
data = data.loc[:,~data.columns.duplicated()]
data[data == 'nan'] = np.nan
data.dropna(axis=0, how='any', inplace=True)
data = pd.concat([data, data3], axis=1, join = 'outer', sort = False)



data.to_csv('C:\\Users\\admin\Downloads\IAT_data.csv')




